{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { headphones, wireless } from '../products';\nconst initialState = {\n  items: localStorage.getItem(\"carts\") ? JSON.parse(localStorage.getItem(\"carts\")) : [],\n  statusTab: false,\n  totalSum: localStorage.getItem(\"total\") ? JSON.parse(localStorage.getItem(\"total\")) : 0\n};\nfunction totalSum(state) {\n  let products = headphones.concat(wireless);\n  let indexProductId;\n  let totalSum = 0;\n  for (const product in products) {\n    indexProductId = state.items.findIndex(item => item.productId === product.id);\n    totalSum += product.price * state.items[indexProductId].quantity;\n    console.log(product.price);\n  }\n  localStorage.setItem(\"total\", JSON.stringify(totalSum));\n}\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    addToCart(state, action) {\n      const {\n        productId,\n        quantity\n      } = action.payload;\n      const indexProductId = state.items.findIndex(item => item.productId === productId);\n      if (indexProductId >= 0) {\n        state.items[indexProductId].quantity += quantity;\n      } else {\n        state.items.push({\n          productId,\n          quantity\n        });\n      }\n      localStorage.setItem(\"carts\", JSON.stringify(state.items));\n      totalSum(state);\n    },\n    changeQuantity(state, action) {\n      const {\n        productId,\n        quantity\n      } = action.payload;\n      const indexProductId = state.items.findIndex(item => item.productId === productId);\n      if (quantity > 0) {\n        state.items[indexProductId].quantity = quantity;\n      } else {\n        state.items = state.items.filter(item => item.productId !== productId);\n      }\n      localStorage.setItem(\"carts\", JSON.stringify(state.items));\n    },\n    changeTotal(state, action) {\n      const products = action.payload;\n      let indexProductId;\n      let totalSum = 0;\n      for (const product in products) {\n        indexProductId = state.items.findIndex(item => item.productId === product.id);\n        totalSum += product.price * state.items[indexProductId].quantity;\n        console.log(product.price);\n      }\n      localStorage.setItem(\"total\", JSON.stringify(totalSum));\n      return totalSum;\n    }\n  }\n});\nexport const {\n  addToCart,\n  changeQuantity,\n  changeTotal\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","headphones","wireless","initialState","items","localStorage","getItem","JSON","parse","statusTab","totalSum","state","products","concat","indexProductId","product","findIndex","item","productId","id","price","quantity","console","log","setItem","stringify","cartSlice","name","reducers","addToCart","action","payload","push","changeQuantity","filter","changeTotal","actions","reducer"],"sources":["C:/Users/afala/Desktop/Универ/Тестовые задания/Neoflex/online-shop/online-shop-2/src/stores/cart.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { headphones, wireless } from '../products'\n\nconst initialState = {\n    items: localStorage.getItem(\"carts\") ? JSON.parse(localStorage.getItem(\"carts\")) : [],\n    statusTab: false,\n    totalSum: localStorage.getItem(\"total\") ? JSON.parse(localStorage.getItem(\"total\")) : 0\n}\nfunction totalSum(state){\n    let products = headphones.concat(wireless);\n    let indexProductId;\n    let totalSum = 0;\n    for (const product in products){\n        indexProductId = (state.items).findIndex(item => item.productId === product.id);\n        totalSum += product.price*state.items[indexProductId].quantity;\n        console.log(product.price);\n    }\n    localStorage.setItem(\"total\", JSON.stringify(totalSum));\n\n}\nconst cartSlice = createSlice({\n    name: 'cart',\n    initialState,\n    reducers: {\n        addToCart(state, action){\n            const {productId, quantity} = action.payload;\n            const indexProductId = (state.items).findIndex(item => item.productId === productId);\n            if(indexProductId >= 0){\n                state.items[indexProductId].quantity += quantity;\n            }else{\n                state.items.push({productId, quantity});\n            }\n            localStorage.setItem(\"carts\", JSON.stringify(state.items));\n            totalSum(state);\n        },\n        changeQuantity(state, action){\n            const {productId, quantity} = action.payload;\n            const indexProductId = (state.items).findIndex(item => item.productId === productId);\n\n            if(quantity > 0){\n                state.items[indexProductId].quantity = quantity;\n            }else{\n                state.items = (state.items).filter(item => item.productId !== productId);\n            }\n            localStorage.setItem(\"carts\", JSON.stringify(state.items));\n        },\n        changeTotal(state, action){\n            const products = action.payload;\n            let indexProductId;\n            let totalSum = 0;\n            for (const product in products){\n                indexProductId = (state.items).findIndex(item => item.productId === product.id);\n                totalSum += product.price*state.items[indexProductId].quantity;\n                console.log(product.price);\n            }\n            localStorage.setItem(\"total\", JSON.stringify(totalSum));\n            \n            return totalSum;\n        }\n    }\n})\nexport const { addToCart, changeQuantity, changeTotal} = cartSlice.actions;\nexport default cartSlice.reducer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}