{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  items: localStorage.getItem(\"carts\") ? JSON.parse(localStorage.getItem(\"carts\")) : [],\n  statusTab: false,\n  totalSum: localStorage.getItem(\"total\") ? JSON.parse(localStorage.getItem(\"total\")) : 0\n};\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    addToCart(state, action) {\n      const {\n        productId,\n        price,\n        quantity\n      } = action.payload;\n      const indexProductId = state.items.findIndex(item => item.productId === productId);\n      if (indexProductId >= 0) {\n        state.items[indexProductId].quantity += quantity;\n      } else {\n        state.items.push({\n          productId,\n          price,\n          quantity\n        });\n      }\n      localStorage.setItem(\"carts\", JSON.stringify(state.items));\n    },\n    changeQuantity(state, action) {\n      const {\n        productId,\n        quantity\n      } = action.payload;\n      const indexProductId = state.items.findIndex(item => item.productId === productId);\n      if (quantity > 0) {\n        state.items[indexProductId].quantity = quantity;\n      } else {\n        state.items = state.items.filter(item => item.productId !== productId);\n      }\n      localStorage.setItem(\"carts\", JSON.stringify(state.items));\n    },\n    changeTotal(state, action) {\n      const products = action.payload;\n      let indexProductId;\n      let totalSum = 0;\n      for (const product in products) {\n        indexProductId = state.items.findIndex(item => item.productId === product.id);\n        totalSum += product.price * state.items[indexProductId].quantity;\n        console.log(product.price);\n      }\n      localStorage.setItem(\"total\", JSON.stringify(totalSum));\n      return totalSum;\n    }\n  }\n});\nexport const {\n  addToCart,\n  changeQuantity,\n  changeTotal\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","items","localStorage","getItem","JSON","parse","statusTab","totalSum","cartSlice","name","reducers","addToCart","state","action","productId","price","quantity","payload","indexProductId","findIndex","item","push","setItem","stringify","changeQuantity","filter","changeTotal","products","product","id","console","log","actions","reducer"],"sources":["C:/Users/afala/Desktop/Универ/Тестовые задания/Neoflex/online-shop/online-shop-2/src/stores/cart.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\n\nconst initialState = {\n    items: localStorage.getItem(\"carts\") ? JSON.parse(localStorage.getItem(\"carts\")) : [],\n    statusTab: false,\n    totalSum: localStorage.getItem(\"total\") ? JSON.parse(localStorage.getItem(\"total\")) : 0\n}\n\nconst cartSlice = createSlice({\n    name: 'cart',\n    initialState,\n    reducers: {\n        addToCart(state, action){\n            const {productId, price, quantity} = action.payload;\n            const indexProductId = (state.items).findIndex(item => item.productId === productId);\n            if(indexProductId >= 0){\n                state.items[indexProductId].quantity += quantity;\n            }else{\n                state.items.push({productId, price, quantity});\n            }\n            localStorage.setItem(\"carts\", JSON.stringify(state.items));\n            \n        },\n        changeQuantity(state, action){\n            const {productId, quantity} = action.payload;\n            const indexProductId = (state.items).findIndex(item => item.productId === productId);\n\n            if(quantity > 0){\n                state.items[indexProductId].quantity = quantity;\n            }else{\n                state.items = (state.items).filter(item => item.productId !== productId);\n            }\n            localStorage.setItem(\"carts\", JSON.stringify(state.items));\n        },\n        changeTotal(state, action){\n            const products = action.payload;\n            let indexProductId;\n            let totalSum = 0;\n            for (const product in products){\n                indexProductId = (state.items).findIndex(item => item.productId === product.id);\n                totalSum += product.price*state.items[indexProductId].quantity;\n                console.log(product.price);\n            }\n            localStorage.setItem(\"total\", JSON.stringify(totalSum));\n            \n            return totalSum;\n        }\n    }\n})\nexport const { addToCart, changeQuantity, changeTotal} = cartSlice.actions;\nexport default cartSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAG9C,MAAMC,YAAY,GAAG;EACjBC,KAAK,EAAEC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE;EACrFG,SAAS,EAAE,KAAK;EAChBC,QAAQ,EAAEL,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,GAAG;AAC1F,CAAC;AAED,MAAMK,SAAS,GAAGT,WAAW,CAAC;EAC1BU,IAAI,EAAE,MAAM;EACZT,YAAY;EACZU,QAAQ,EAAE;IACNC,SAASA,CAACC,KAAK,EAAEC,MAAM,EAAC;MACpB,MAAM;QAACC,SAAS;QAAEC,KAAK;QAAEC;MAAQ,CAAC,GAAGH,MAAM,CAACI,OAAO;MACnD,MAAMC,cAAc,GAAIN,KAAK,CAACX,KAAK,CAAEkB,SAAS,CAACC,IAAI,IAAIA,IAAI,CAACN,SAAS,KAAKA,SAAS,CAAC;MACpF,IAAGI,cAAc,IAAI,CAAC,EAAC;QACnBN,KAAK,CAACX,KAAK,CAACiB,cAAc,CAAC,CAACF,QAAQ,IAAIA,QAAQ;MACpD,CAAC,MAAI;QACDJ,KAAK,CAACX,KAAK,CAACoB,IAAI,CAAC;UAACP,SAAS;UAAEC,KAAK;UAAEC;QAAQ,CAAC,CAAC;MAClD;MACAd,YAAY,CAACoB,OAAO,CAAC,OAAO,EAAElB,IAAI,CAACmB,SAAS,CAACX,KAAK,CAACX,KAAK,CAAC,CAAC;IAE9D,CAAC;IACDuB,cAAcA,CAACZ,KAAK,EAAEC,MAAM,EAAC;MACzB,MAAM;QAACC,SAAS;QAAEE;MAAQ,CAAC,GAAGH,MAAM,CAACI,OAAO;MAC5C,MAAMC,cAAc,GAAIN,KAAK,CAACX,KAAK,CAAEkB,SAAS,CAACC,IAAI,IAAIA,IAAI,CAACN,SAAS,KAAKA,SAAS,CAAC;MAEpF,IAAGE,QAAQ,GAAG,CAAC,EAAC;QACZJ,KAAK,CAACX,KAAK,CAACiB,cAAc,CAAC,CAACF,QAAQ,GAAGA,QAAQ;MACnD,CAAC,MAAI;QACDJ,KAAK,CAACX,KAAK,GAAIW,KAAK,CAACX,KAAK,CAAEwB,MAAM,CAACL,IAAI,IAAIA,IAAI,CAACN,SAAS,KAAKA,SAAS,CAAC;MAC5E;MACAZ,YAAY,CAACoB,OAAO,CAAC,OAAO,EAAElB,IAAI,CAACmB,SAAS,CAACX,KAAK,CAACX,KAAK,CAAC,CAAC;IAC9D,CAAC;IACDyB,WAAWA,CAACd,KAAK,EAAEC,MAAM,EAAC;MACtB,MAAMc,QAAQ,GAAGd,MAAM,CAACI,OAAO;MAC/B,IAAIC,cAAc;MAClB,IAAIX,QAAQ,GAAG,CAAC;MAChB,KAAK,MAAMqB,OAAO,IAAID,QAAQ,EAAC;QAC3BT,cAAc,GAAIN,KAAK,CAACX,KAAK,CAAEkB,SAAS,CAACC,IAAI,IAAIA,IAAI,CAACN,SAAS,KAAKc,OAAO,CAACC,EAAE,CAAC;QAC/EtB,QAAQ,IAAIqB,OAAO,CAACb,KAAK,GAACH,KAAK,CAACX,KAAK,CAACiB,cAAc,CAAC,CAACF,QAAQ;QAC9Dc,OAAO,CAACC,GAAG,CAACH,OAAO,CAACb,KAAK,CAAC;MAC9B;MACAb,YAAY,CAACoB,OAAO,CAAC,OAAO,EAAElB,IAAI,CAACmB,SAAS,CAAChB,QAAQ,CAAC,CAAC;MAEvD,OAAOA,QAAQ;IACnB;EACJ;AACJ,CAAC,CAAC;AACF,OAAO,MAAM;EAAEI,SAAS;EAAEa,cAAc;EAAEE;AAAW,CAAC,GAAGlB,SAAS,CAACwB,OAAO;AAC1E,eAAexB,SAAS,CAACyB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}